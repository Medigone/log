[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2025-07-23 19:26:15.800243",
  "module": "Log",
  "name": "Bouton contact html",
  "script": "frappe.ui.form.on('Customer', {\n    refresh: function(frm) {\n        // Construction du HTML qui contient le conteneur pour le tableau et le bouton sous le tableau\n        let html_content = `\n            <div id=\"title\" style=\"margin-top: 5px; font-size: 14px;\">Liste Contacts</div>\n            <div id=\"contacts-table\" style=\"margin-top: 10px;\"></div>\n            <button class=\"btn btn-secondary btn-xs\" id=\"add-contact-btn\" style=\"margin-top: 10px; margin-bottom: 10px;\">Ajouter Contact</button>\n        `;\n        frm.get_field('custom_contact_html_custom').$wrapper.html(html_content);\n\n        // Fonction pour charger et afficher la liste des contacts via la méthode Python\n        function load_contacts() {\n            frappe.call({\n                method: \"log.log.customer_hooks.get_customer_contacts\", // Vérifiez le chemin de votre méthode\n                args: { customer: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        let data = r.message;\n                        // Construction du tableau HTML avec attribution d'un data-docname pour chaque ligne\n                        let table_html = `<table id=\"contacts-table-inner\">\n                            <thead>\n                                <tr>\n                                    <th>Contact</th>\n                                    <th>Fonction</th>\n                                    <th>Mobile</th>\n                                    <th>Email</th>\n                                </tr>\n                            </thead>\n                            <tbody>`;\n                        data.forEach(function(contact) {\n                            table_html += `<tr class=\"contact-row\" data-docname=\"${contact.docname}\">\n                                <td><strong>${contact.contact}</strong></td>\n                                <td>${contact.designation}</td>\n                                <td>${contact.mobile}</td>\n                                <td>${contact.email}</td>\n                            </tr>`;\n                        });\n                        table_html += `</tbody></table>`;\n                        frm.get_field('custom_contact_html_custom').$wrapper.find('#contacts-table').html(table_html);\n\n                        // Injection du CSS pour le style du tableau\n                        let css = `\n                         <style>\n                        /* Conteneur du tableau */\n                        #contacts-table {\n                            overflow-x: auto;\n                        }\n                        /* Style du tableau */\n                        #contacts-table-inner {\n                            border-collapse: separate;\n                            border-spacing: 0;\n                            width: 100%;\n                            border: 0.4px solid #e9ecef;\n                            border-radius: 8px;\n                            overflow: hidden;\n                            font-size: 12px;\n                        }\n                        #contacts-table-inner th {\n                            background-color: #f2f2f2;\n                            border: 0.4px solid #e9ecef;\n                            padding: 8px;\n                            white-space: nowrap;\n                        }\n                        #contacts-table-inner td {\n                            border: 0.4px solid #e9ecef;\n                            padding: 8px;\n                            white-space: nowrap;\n                        }\n                        #contacts-table-inner thead tr:first-child th:first-child {\n                            border-top-left-radius: 8px;\n                        }\n                        #contacts-table-inner thead tr:first-child th:last-child {\n                            border-top-right-radius: 8px;\n                        }\n                        #contacts-table-inner tbody tr:last-child td:first-child {\n                            border-bottom-left-radius: 8px;\n                        }\n                        #contacts-table-inner tbody tr:last-child td:last-child {\n                            border-bottom-right-radius: 8px;\n                        }\n                        /* Curseur pointer sur la ligne */\n                        #contacts-table-inner tbody tr.contact-row {\n                            cursor: pointer;\n                        }\n                        </style>\n                        `;\n                        // On ajoute le style dans le wrapper (s'il n'est pas déjà présent)\n                        if (frm.get_field('custom_contact_html_custom').$wrapper.find('style').length === 0) {\n                            frm.get_field('custom_contact_html_custom').$wrapper.append(css);\n                        }\n\n                        // Ajout d'un événement click sur chaque ligne du tableau\n                        frm.get_field('custom_contact_html_custom').$wrapper.find('#contacts-table-inner tbody')\n                            .on('click', 'tr.contact-row', function() {\n                                let docname = $(this).attr('data-docname');\n                                // Utilisation de frappe.set_route pour naviguer vers le formulaire Contact\n                                frappe.set_route(\"Form\", \"Contact\", docname);\n                            });\n                    }\n                }\n            });\n        }\n\n        // Chargement initial des contacts\n        load_contacts();\n\n        // Gestion du clic sur le bouton pour ajouter un contact\n        frm.get_field('custom_contact_html_custom').$wrapper.find('#add-contact-btn').click(function() {\n            frappe.prompt([\n                {\n                    \"fieldname\": \"first_name\",\n                    \"fieldtype\": \"Data\",\n                    \"label\": __(\"First Name\"),\n                    \"reqd\": 1\n                },\n                {\n                    \"fieldname\": \"last_name\",\n                    \"fieldtype\": \"Data\",\n                    \"label\": __(\"Last Name\"),\n                    \"reqd\": 1\n                },\n                {\n                    \"fieldname\": \"designation\",\n                    \"fieldtype\": \"Data\",\n                    \"label\": __(\"Fonction\"),\n                    \"reqd\": 1\n                },\n                {\n                    \"fieldname\": \"mobile_no\",\n                    \"fieldtype\": \"Data\",\n                    \"label\": __(\"Téléphone Mobile\"),\n                    \"reqd\": 1\n                },\n                {\n                    \"fieldname\": \"email\",\n                    \"fieldtype\": \"Data\",\n                    \"label\": __(\"Email\"),\n                    \"reqd\": 1\n                },\n                {\n                    \"fieldname\": \"is_primary\",\n                    \"fieldtype\": \"Check\",\n                    \"label\": __(\"Est Contact Principal\"),\n                    \"default\": 0\n                }\n            ],\n            function(values) {\n                frappe.call({\n                    method: \"frappe.client.insert\",\n                    args: {\n                        doc: {\n                            doctype: \"Contact\",\n                            first_name: values.first_name,\n                            last_name: values.last_name,\n                            designation: values.designation,\n                            is_primary_contact: 1,\n                            links: [{\n                                link_doctype: \"Customer\",\n                                link_name: frm.doc.name\n                            }],\n                            phone_nos: [{\n                                phone: values.mobile_no,\n                                is_primary_mobile_no: 1\n                            }],\n                            email_ids: [{\n                                email_id: values.email,\n                                is_primary: 1\n                            }]\n                        }\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            frappe.msgprint(__(\"Contact ajouté avec succès\"));\n                            if (values.is_primary) {\n                                frappe.call({\n                                    method: \"frappe.client.set_value\",\n                                    args: {\n                                        doctype: \"Customer\",\n                                        name: frm.doc.name,\n                                        fieldname: \"customer_primary_contact\",\n                                        value: r.message.name\n                                    },\n                                    callback: function() {\n                                        frappe.msgprint(__(\"Customer mis à jour avec le contact principal\"));\n                                    }\n                                });\n                            }\n                            // Recharge le tableau des contacts après insertion\n                            load_contacts();\n                        }\n                    }\n                });\n            },\n            __(\"Ajouter un Contact\"),\n            __(\"Créer\")\n            );\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2025-07-23 20:56:04.224901",
  "module": "Log",
  "name": "Bon de livraison",
  "script": "frappe.ui.form.on('Delivery Note', {\n    refresh: function(frm) {\n        // 1) Bouton \"Créer Colis\" uniquement en brouillon et si can_create_colis\n        if (frm.doc.docstatus === 0) {\n            frappe.call({\n                method: 'log.delivery_note_hooks.can_create_colis',\n                args: { delivery_note_name: frm.doc.name },\n                callback: r => {\n                    if (r.message) {\n                        frm.add_custom_button(__('Créer Colis'), () => {\n                            const do_create = () => {\n                                frappe.call({\n                                    method: 'log.delivery_note_hooks.create_colis',\n                                    args: { delivery_note_name: frm.doc.name },\n                                    callback: r2 => {\n                                        if (r2.message) {\n                                            // on passe au Colis créé\n                                            frappe.set_route('Form', 'Colis', r2.message);\n                                        }\n                                    }\n                                });\n                            };\n                            // si jamais non sauvegardé, on sauve d'abord\n                            if (frm.doc.__islocal) {\n                                frm.save().then(do_create);\n                            } else {\n                                do_create();\n                            }\n                        });\n                    }\n                }\n            });\n        }\n\n        // 2) Affiche toujours la liste des colis existants\n        load_colis(frm);\n    }\n});\n\nfunction load_colis(frm) {\n    const f = frm.get_field('custom_html');\n    if (!f) return;\n    const $w = f.$wrapper;\n\n    frappe.call({\n        method: 'log.delivery_note_hooks.get_colis_for_delivery_note',\n        args: { delivery_note_name: frm.doc.name },\n        callback: r => {\n            const list = r.message || [];\n            let html = `\n              <div style=\"margin-bottom:8px;\">\n                <strong>Colis liés</strong> (${list.length})\n              </div>\n              <div style=\"display:flex;flex-direction:column;gap:6px;\">`;\n\n            if (list.length) {\n                list.forEach(c => {\n                    const badge = get_status_badge(c.status);\n                    html += `\n                      <div>\n                        <a href=\"#\" onclick=\"frappe.set_route('Form','Colis','${c.name}');return false;\">\n                          ${c.name}\n                        </a>\n                        ${badge}\n                        <small style=\"margin-left:4px;\">\n                          ${c.custom_numero_sequence} — ${frappe.datetime.str_to_user(c.date)}\n                        </small>\n                      </div>`;\n                });\n            } else {\n                html += `<p style=\"font-size:12px;color:#666;\">Aucun colis créé.</p>`;\n            }\n            html += `</div>`;\n            $w.html(html);\n        }\n    });\n}\n\nfunction get_status_badge(status) {\n    const config = {\n        \"Nouveau\":   { bg: \"rgba(0,123,255,0.1)\", color: \"#007bff\" },\n        \"Préparé\":   { bg: \"rgba(23,162,184,0.1)\", color: \"#17a2b8\" },\n        \"Enlevé\":    { bg: \"rgba(255,193,7,0.1)\",   color: \"#ffc107\" },\n        \"Livré\":     { bg: \"rgba(40,167,69,0.1)\",   color: \"#28a745\" },\n        \"Non Livré\": { bg: \"rgba(220,53,69,0.1)\",   color: \"#dc3545\" },\n        \"Annulé\":    { bg: \"rgba(108,117,125,0.1)\", color: \"#6c757d\" }\n    };\n    const s = config[status] || { bg: \"rgba(102,102,102,0.1)\", color: \"#666\" };\n    return `<span style=\"\n               background-color:${s.bg};\n               color:${s.color};\n               border-radius:4px;\n               padding:2px 6px;\n               font-size:11px;\n               margin-left:4px;\n             \">${status}</span>`;\n}\n",
  "view": "Form"
 }
]